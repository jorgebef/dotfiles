# # set -g default-shell /bin/zsh
# set -g default-shell /opt/homebrew/bin/fish # set shell
# setw -g mode-keys vi # set vi key bindings
# set -g mouse off # mouse scrolling
# set -g base-index 1 # the only time it makes sense to begin indexing at 1.
# set -g renumber-windows on    # renumber windows when a window is closed
# set status on
# # set-option -g prefix C-b #bind-key C-b send-prefix

# set-option -g detach-on-destroy off # don't detach if session is destroyed
# set -sg escape-time 0 # remove delay on escape key
# set -g history-limit 500000 # Increase scrollback buffer size from 2000 to 50000 lines
# set -g display-time 4000 # Increase tmux messages display duration from 750ms to 4s
# set -g status-interval 2 # Refresh 'status-left' and 'status-right' more often, from every 15s to 5s


# colors
# set -g default-terminal "tmux-256color"
set -g terminal-overrides ",xterm-256color:RGB"

set -g base-index 1          # start indexing windows at 1 instead of 0
set -g detach-on-destroy off # don't exit from tmux when closing a session
set -g escape-time 0         # zero-out escape time delay
set -g history-limit 1000000 # increase history size (from 2,000)
set -g mouse on              # enable mouse support
set -g renumber-windows on   # renumber all windows when any window is closed
set -g set-clipboard on      # use system clipboard
set -g status-interval 5     # update the status bar every 3 seconds

set -g status-left "#[fg=blue,bold]#S"
set -ga status-left " #[fg=white,nobold]#(gitmux -cfg $HOME/.config/tmux/gitmux.conf)"
set -g status-left-length 200    # increase length (from 10)
set -g status-position bottom       # macOS / darwin style
set -g status-right ''           # blank
set -g status-style 'bg=default' # transparent

set-option -g automatic-rename on
# set -g window-status-current-format ' #[fg=magenta]#W'
# set -g window-status-format ' #[fg=#6f6f6f]#W'
set -g window-status-current-format "#[fg=magenta,bold]‚Äî‚Äî‚Äî‚Äî‚Äî"
set -g window-status-format "#[fg=#6f6f6f]‚Äî‚Äî‚Äî‚Äî‚Äî"



set -g default-terminal "${TERM}" # Upgrade $TERM
# set -g default-terminal "screen-256color" # Upgrade $TERM
# set -g default-terminal "xterm-256color" # Upgrade $TERM
# Needs this for wezterm to display underline and undercurl
# with correct colors, etc...
# set-option -ga terminal-overrides 'wezterm'
set -s extended-keys on
# Needs this for alacritty to display colors accurately
# set-option -ga terminal-overrides ",alacritty:Tc"

# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs
set -g focus-events on # Focus events enabled for terminals that support them
# setw -g aggressive-resize on # Super useful when using "grouped sessions" and multi-monitor setup

# ********************************************************
# ********** Improving existing keybindings **************
# ********************************************************
bind-key -r C-v copy-mode # Start vim-like navigation

# # Script below copied from:
# # https://waylonwalker.com/tmux-fzf-session-jump/
# # Check the terminal config (alacritty.yml) to see what keys
# # are being set for this shortcut, Alt+z is very uncomfortable
# # so most likely the shortcut will be Control+;, which is bound to
# # "Œ©" which is then also bound in the terminal of use
# # WARNING using xargs with the -I flag and later '{}' is mandatory
# # to use session names with spaces in them
# # https://man7.org/linux/man-pages/man1/xargs.1.html
# bind-key -n Œ© display-popup -E "\
#     tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
#     sed '/^$/d' |\
#     fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}'  |\
#     xargs -I{} tmux switch-client -t '{}'"

bind-key -n Œ© run-shell "~/.config/tmux/plugins/t-smart-tmux-session-manager/bin/t"

# bind-key -n √æ resize-pane -Z

# bind-key -n M-C-m choose-tree -swZ

bind-key -n C-M-i command-prompt -p # Enter interactive prompt
# bind-key -n C-M-o command-prompt -p "New Session:" "new-session -A -s '%%'" # Create new session and prompt for name
bind-key -r C-n command-prompt -p "New Session:" "new-session -A -s '%%'" # Create new session and prompt for name

bind c new-window -c '#{pane_current_path}'
bind '"' split-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'

# Integrate vim | nvim | hx navigation with TMUX navigation seamlessly and also without wrapping
# https://github.com/christoomey/vim-tmux-navigator#:~:text=n%20C%2D%5C%5C-,Disable%20Wrapping,-By%20default%2C%20if
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|hx)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" { send-keys C-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n 'C-j' if-shell "$is_vim" { send-keys C-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n 'C-k' if-shell "$is_vim" { send-keys C-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n 'C-l' if-shell "$is_vim" { send-keys C-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }
bind-key -T copy-mode-vi 'C-h' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi 'C-j' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi 'C-k' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi 'C-l' if-shell -F '#{pane_at_right}'  {} { select-pane -R }

bind-key -r = select-layout even-horizontal

bind-key -n √æ next-window
bind-key -n ‚Ä† previous-window
# bind-key -n C-. select-window -t +1
# bind-key -n C-, select-window -t -1

bind -r r source-file ~/.config/tmux/tmux.conf

# NOTE: you can use vars with $<var> and ${<var>} as long as the str is double quoted: ""
# WARNING: hex colors can't contain capital letters
# --> Catppuccin
thm_bg="#1e1e2e"
thm_fg="#cdd6f4"
# thm_white="#d2daf1"
thm_white="#ffffff"
thm_cyan="#89dceb"
thm_black="#181825"
thm_gray="#313244"
thm_magenta="#cba6f7"
thm_pink="#f5c2e7"
thm_red="#f38ba8"
thm_green="#a6e3a1"
thm_yellow="#f9e2af"
thm_blue="#89b4fa"
thm_orange="#fab387"
thm_surface1="#45475a"
thm_black4="#585b70"
thm_subtext0="#a6adc8"
thm_overlay2="#9399b2"
thm_overlay0="#6c7086"
# ----------------------------=== Theme ===--------------------------
# # status
# set -g status-position bottom
# set -g status "on"
# # set -g status-bg "${thm_bg}"
# set-option -g status-style bg=default
# # set -g mode-style fg="${thm_black2}",bg="${thm_mauve}"
# # set -g status-justify "left"
# set -g status-left-length "80"
# set -g status-right-length "80"
# set -g status-justify centre
# # set -g status-left " #[fg=$thm_pink]Áå´ #[fg=$thm_blue]Ôûü #[fg=$thm_pink,bold] #S"
# set -g status-left " #[fg=$thm_pink,bold]Áå´ #[fg=$thm_overlay2,nobold]#S"
# # windows
# setw -g window-status-activity-style "fg=${thm_white},bg=${thm_black4},none"
# setw -g window-status-separator "  "
# setw -g window-status-style "fg=${thm_white},bg=${thm_black4},none"

# set -g window-status-current-format '*#[fg=magenta]#W'
# set -g window-status-format ' #[fg=gray]#W'

set -g status-left "#[fg=blue,bold]#S"
set -ga status-left " #[fg=white,nobold]#(gitmux -cfg $HOME/.config/tmux/gitmux.conf)                                             "
set -g status-left-length 200    # increase length (from 10)
set -g status-position bottom       # macOS / darwin style
# set -g status-right ''           # blank
# set -g status-right "#[fg=$thm_overlay2]ÔÑú  #[fg=$thm_overlay2]#(~/.config/bin/keyboard_layout.sh) - #[fg=$thm_overlay2]Ôê∫ #[fg=$thm_subtext0]%H:%M "
set -g status-right "                                                              " # space to center align window names
set -g status-style 'bg=default' # transparent
set -g status-left-length "40"
set -g status-right-length "40"
set -g status-justify centre

# # messages
# set -g message-style "fg=${thm_magenta},bg=${thm_gray},align=centre"
# set -g message-command-style "fg=${thm_cyan},bg=${thm_bg},align=centre"

# panes
set -g pane-border-style "fg=${thm_black4}"
set -g pane-active-border-style "fg=magenta"


# Undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# set -g @tmux-nerd-font-window-name-shell-icon 'ÔÅî'
# set -g @tmux-nerd-font-window-name-show-name false
set -g @t-fzf-prompt 'üî≠ '
set -g @t-fzf-default-results 'sessions'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'
set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'
# set -g @plugin 'catppuccin/tmux'
    # set -g @resurrect-strategy-nvim 'session'
    # set -g @resurrect-capture-pane-contents 'on'
    # set -g @resurrect-processes 'ssh'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
