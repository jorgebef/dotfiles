set -g default-terminal "$TERM"
set -ag terminal-overrides ",$TERM:Tc"
# set -g terminal-overrides ",xterm-256color:RGB"
# set -g default-terminal "screen-256color"

set -g base-index 1          # start indexing windows at 1 instead of 0
set -g detach-on-destroy off # don't exit from tmux when closing a session
set -g escape-time 0         # zero-out escape time delay
set -g history-limit 3000   # increase history size (from 2,000)
set -g mouse on              # enable mouse support
set -g renumber-windows on   # renumber all windows when any window is closed
set -g set-clipboard on      # use system clipboard
# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs
# Focus events enabled for terminals that support them
set -g focus-events on
# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

set-option -g automatic-rename on

set -s extended-keys on

# unbind-key -a

# ********************************************************
# ********** Improving existing keybindings **************
# ********************************************************
bind-key -r C-v copy-mode # Start vim-like navigation

# bind-key -n "√æ" run-shell "sesh connect \"$(
# 	sesh list -t | fzf-tmux -p 35%,50% \
# 		--no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
# 		--header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
# 		--bind 'tab:down,btab:up' \
# 		--bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
# 		--bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
# 		--bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
# 		--bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
# 		--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
# 		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)'
# )\""

# bind-key -n "√æ" run-shell 'sesh connect "$(sesh list -t | fzf-tmux -p 35%,50% --no-sort --ansi \
#    --border-label " sesh "\
#    --prompt "ü™ü "\
# 	--header "  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find" \
# 	--bind "tab:down,btab:up" \
# 	--bind "ctrl-a:change-prompt(‚ö°  )+reload(sesh list)" \
# 	--bind "ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)" \
# 	--bind "ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)" \
# 	--bind "ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)" \
# 	--bind "ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)" \
# 	--bind "ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)"\
# )"'

# Script below copied from:
# https://waylonwalker.com/tmux-fzf-session-jump/
# Check the terminal config (alacritty.yml) to see what keys
# are being set for this shortcut, Alt+z is very uncomfortable
# so most likely the shortcut will be Control+;, which is bound to
# "Œ©" which is then also bound in the terminal of use
# WARNING using xargs with the -I flag and later '{}' is mandatory
# to use session names with spaces in them
# https://man7.org/linux/man-pages/man1/xargs.1.html

# bind-key -n "√æ" display-popup -E -w 35% "sesh connect \"$(
#     sesh list -t |\
#     fzf --reverse --header jump-to-session)\""

bind-key -n √æ display-popup -E -B -w 35% "tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session |\
    xargs -I{} tmux switch-client -t '{}'"

# bind-key -n √æ display-popup -E -w 35% "echo laksdjfl lkasjd flasj dfla sjdfl && sleep 5s |\
#     xargs -I{} tmux switch-client -t '{}'"

# bind-key -n "√æ" display-popup -E -w 40% "sesh connect \"$(
# sesh list -t | gum filter --limit 1 --placeholder 'Pick a sesh' --height 50 --prompt='‚ö°'
# )\""

# bind-key -n  resize-pane -Z
# bind-key -n M-C-m choose-tree -swZ

bind * list-clients
bind : command-prompt
bind-key -r N command-prompt -p "New Session:" "new-session -A -s '%%'" # Create new session and prompt for name
bind r command-prompt "rename-window %%"
# bind c new-window -c '#{pane_current_path}'
# bind '"' split-window -c '#{pane_current_path}'
# bind % split-window -h -c '#{pane_current_path}'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

bind * list-clients
bind : command-prompt
bind-key -r N command-prompt -p "New Session:" "new-session -A -s '%%'"
bind r command-prompt "rename-window %%"
bind c new-window -c '#{pane_current_path}' -a -t '{next}'

bind 'C-d' detach
bind h split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

bind-key -r = select-layout even-horizontal

bind-key -n C-. select-window -t +1
bind-key -n C-, select-window -t -1
bind-key -n ‚Ä† resize-pane -Z
bind-key -n Œ© if-shell -F '#{pane_index}==0' \
              { select-pane -t 0 ; resize-pane -Z } \
              { select-pane -t 0 ; resize-pane -y 40 ; select-pane -D }

bind r source-file $HOME/.config/tmux/tmux.conf \; display-message "Config reloaded..."

bind -r R command-prompt -p "Rename Session: " "rename-session '%%'"

set -g window-status-current-format "#[fg=blue,bold]Ó©±#W "

set -g status-interval 3
set -g status-left "#[fg=darkGray] ÓÄá  #S  |  "
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-position bottom
set -g status-right ""

set -g status-style 'bg=default'

# # POPUP SHELL
# bind -n C-n display-popup -T ' +#S ' -h 60% -E show-tmux-popup.sh
#
# set -g popup-border-style fg=colour245
# set -g popup-border-lines rounded
#
# # support detaching from nested session with the same shortcut
# bind -T popup C-n detach
# bind -T popup C-o copy-mode
# bind -T popup M-c new-window -c '#{pane_current_path}'
# bind -T popup M-n next-window
# bind -T popup M-m previous-window
#
# bind -T popup M-L run 'tmux move-window -a -t $TMUX_PARENT_SESSION:{next}'

# panes
set -g pane-border-style "fg=black"
set -g pane-active-border-style "fg=magenta"

# # Undercurl
# set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
# set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-capture-pane-contents 'off'

setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.tmux/plugins/"
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

# set -g default-command /opt/homebrew/bin/fish
# set -g default-shell /opt/homebrew/bin/fish
