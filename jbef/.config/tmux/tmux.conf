set -g default-terminal "$TERM"
set -ag terminal-overrides ",$TERM:Tc"

set -g base-index 1          # start indexing windows at 1 instead of 0
set -g detach-on-destroy off # don't exit from tmux when closing a session
set -g escape-time 0         # zero-out escape time delay
set -g history-limit 3000    # increase history size (from 2,000)
set -g mouse on              # enable mouse support
set -g renumber-windows on   # renumber all windows when any window is closed
set -g set-clipboard on      # use system clipboard
set -g display-time 4000
set -g status-interval 3
# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs
# Focus events enabled for terminals that support them
set -g focus-events on
# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

set-option -g automatic-rename on

# ********************************************************
# ********** Improving existing keybindings **************
# ********************************************************
bind-key -r C-v copy-mode # Start vim-like navigation

bind-key -n "þ" display-popup -E -S fg=brightblack -w 35% -h 50% -T "#[fg=green]Sessionizer" "$HOME/.config/bin/tmux-sessionizer"

# Alternatively, if you want to disable wrapping when moving in non-neovim panes, use these bindings
bind-key -n C-h if -F "#{@pane-is-vim}" { send-keys C-h } { if -F "#{pane_at_left}"   "" "select-pane -L" }
bind-key -n C-j if -F "#{@pane-is-vim}" { send-keys C-j } { if -F "#{pane_at_bottom}" "" "select-pane -D" }
bind-key -n C-k if -F "#{@pane-is-vim}" { send-keys C-k } { if -F "#{pane_at_top}"    "" "select-pane -U" }
bind-key -n C-l if -F "#{@pane-is-vim}" { send-keys C-l } { if -F "#{pane_at_right}"  "" "select-pane -R" }

# Smart pane resizing with awareness of Neovim splits.
bind-key -n ⇇ if -F "#{@pane-is-vim}" "send-keys ⇇" "resize-pane -L 3"
bind-key -n ⇊ if -F "#{@pane-is-vim}" "send-keys ⇊" "resize-pane -D 3"
bind-key -n ⇈ if -F "#{@pane-is-vim}" "send-keys ⇈" "resize-pane -U 3"
bind-key -n ⇉ if -F "#{@pane-is-vim}" "send-keys ⇉" "resize-pane -R 3"

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi "C-h" select-pane -L
bind-key -T copy-mode-vi "C-j" select-pane -D
bind-key -T copy-mode-vi "C-k" select-pane -U
bind-key -T copy-mode-vi "C-l" select-pane -R
bind-key -T copy-mode-vi "C-\\" select-pane -l

bind "*" list-clients
bind ":" command-prompt
bind-key -r "N" command-prompt -p "New Session:" "new-session -A -s '%%'" # Create new session and prompt for name
bind "r" command-prompt "rename-window %%"

bind "C-d" detach

# This fixes the fact that ctrl-d in a bare shell kills the shell
# specifically with wezterm, when quitting, it also closes the last pane
# if it is a plain shell with no program running
bind-key -n C-d if -F "#{@pane-is-vim}" { send-keys C-d } ""

bind "c" new-window -c "#{pane_current_path}"

bind "h" split-window -v -c "#{pane_current_path}"
bind "v" split-window -h -c "#{pane_current_path}"

bind-key -r "=" select-layout even-horizontal

bind-key -n "C-." select-window -t +1
bind-key -n "C-," select-window -t -1

bind R source-file "$HOME/.config/tmux/tmux.conf"; display-message "Config reloaded..."

set -g window-status-current-format "#[fg=blue] #W "
set -g window-status-format "#[fg=brightblack] #W "

set -g status-left "#[fg=yellow]   #S  |  "
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-position bottom
set -g status-right ""

set -g status-style "bg=default,fg=white"

# panes
set -g pane-border-style "fg=brightblack"
set -g pane-active-border-style "fg=brightblack"

TMUX_FZF_PREVIEW=1
TMUX_FZF_PREVIEW_FOLLOW=0
TMUX_FZF_SWITCH_CURRENT=1

# List of plugins
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-yank"
set -g @plugin "tmux-plugins/tmux-resurrect"
set -g @plugin "tmux-plugins/tmux-continuum"
set -g @plugin "tmux-plugins/tmux-cowboy"
set -g @plugin "sainnhe/tmux-fzf"
# set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-capture-pane-contents "off"
set -g @continuum-save-interval "1" # Update the saved session every five minuets.
set -g @continuum-restore "on"

setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.tmux/plugins/"
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b "~/.tmux/plugins/tpm/tpm"

set -g @tpm-clean "X"
