# NOTE: you can use vars with $<var> and ${<var>} as long as the str is double quoted: ""
# WARNING: hex colors can't contain capital letters
# --> Catppuccin
# --> Catppuccin (Mocha)
thm_bg="#1e1e2e"
thm_fg="#cdd6f4"
thm_cyan="#89dceb"
thm_black="#181825"
thm_gray="#313244"
thm_magenta="#cba6f7"
thm_pink="#f5c2e7"
thm_red="#f38ba8"
thm_green="#a6e3a1"
thm_yellow="#f9e2af"
thm_blue="#89b4fa"
thm_orange="#fab387"
thm_black4="#585b70"
thm_overlay0="#6c7086"
thm_overlay2="#9399b2"
thm_subtext0="#a6adc8"
# ----------------------------=== Theme ===--------------------------

set -g default-terminal "${TERM}" # Upgrade $TERM
# set -g terminal-overrides ",xterm-256color:RGB"
# set -g default-terminal "screen-256color"

set -g base-index 1          # start indexing windows at 1 instead of 0
set -g detach-on-destroy off # don't exit from tmux when closing a session
set -g escape-time 0         # zero-out escape time delay
set -g history-limit 10000   # increase history size (from 2,000)
set -g mouse on              # enable mouse support
set -g renumber-windows on   # renumber all windows when any window is closed
set -g set-clipboard on      # use system clipboard
# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs
# Focus events enabled for terminals that support them
set -g focus-events on
# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

set-option -g automatic-rename on

set -s extended-keys on

unbind-key -a

# ********************************************************
# ********** Improving existing keybindings **************
# ********************************************************
bind-key -r C-v copy-mode # Start vim-like navigation
# bind-key -n √æ run-shell "~/.config/tmux/plugins/t-smart-tmux-session-manager/bin/t"
bind-key -n √æ run-shell "sesh connect $(
sesh list -t | fzf-tmux -p 55%,60% \
  --no-sort --border-label ' sesh ' --prompt '‚ö°  ' \
  --header '  ^a all ^t tmux ^x zoxide ^f find' \
  --bind 'tab:down,btab:up' \
  --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
  --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
  --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
  --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)'
)"

# bind-key -n  resize-pane -Z
# bind-key -n M-C-m choose-tree -swZ

bind * list-clients
bind : command-prompt # Enter interactive prompt
bind-key -r C-n command-prompt -p "New Session:" "new-session -A -s '%%'" # Create new session and prompt for name
bind r command-prompt "rename-window %%"
bind c new-window -c '#{pane_current_path}'
# bind '"' split-window -c '#{pane_current_path}'
# bind % split-window -h -c '#{pane_current_path}'

# Integrate vim | nvim | hx navigation with TMUX navigation seamlessly and also without wrapping
# https://github.com/christoomey/vim-tmux-navigator#:~:text=n%20C%2D%5C%5C-,Disable%20Wrapping,-By%20default%2C%20if
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|hx)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" { send-keys C-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n 'C-j' if-shell "$is_vim" { send-keys C-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n 'C-k' if-shell "$is_vim" { send-keys C-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n 'C-l' if-shell "$is_vim" { send-keys C-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }
bind-key -n 'C-d' detach
bind-key -T copy-mode-vi 'C-h' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi 'C-j' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi 'C-k' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi 'C-l' if-shell -F '#{pane_at_right}'  {} { select-pane -R }
bind h split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

bind-key -r = select-layout even-horizontal

# bind-key -n Œ© next-window
# bind-key -n ‚Ä† previous-window
bind-key -n C-. select-window -t +1
bind-key -n C-, select-window -t -1
bind-key -n ‚Ä† resize-pane -Z
bind-key -n Œ© if-shell -F '#{pane_index}==0' \
              { select-pane -t 0 ; resize-pane -Z } \
              { select-pane -t 0 ; resize-pane -Z ; select-pane -D }
# bind-key -n Œ© display '#{pane_index}'

bind -r R source-file ~/.config/tmux/tmux.conf


set -g window-status-current-format "#[fg=$thm_blue,bold] Û∞ÑõÛ∞è©Û∞©É #[fg=$thm_subtext0]"
set -g window-status-format "#[fg=$thm_overlay0]‚Äî‚Äî‚Äî"

set -g status-interval 1     # update the status bar every 3 seconds
set -g status-left "#[fg=$thm_overlay2,bold] ÓÄá  #S #[fg=$thm_bg]#(gitmux -cfg $HOME/.config/tmux/gitmux-blend.conf #{pane_current_path})"
# set -g status-left "#[fg=$thm_overlay2,bold] ÓÄá  #S"
set -g status-left-length "100"    # increase length (from 10)
set -g status-right-length "100"    # increase length (from 10)
set -g status-position top       # macOS / darwin style
set -g status-right "#[fg=$thm_bg] ÓÄá  #S #(gitmux -cfg $HOME/.config/tmux/gitmux.conf #{pane_current_path})"
# set -g status-right ""
set -g status-style 'bg=default' # transparent
set -g status-justify centre

# panes
set -g pane-border-style "fg=${thm_black4}"
set -g pane-active-border-style "fg=magenta"

# # Undercurl
# set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
# set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-capture-pane-contents 'off'


# set -g @plugin 'catppuccin/tmux'
# set -g @resurrect-strategy-nvim 'session'
# set -g @resurrect-processes 'ssh'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.config/tmux/plugins/tpm/tpm'
